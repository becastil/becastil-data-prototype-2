{"version":3,"sources":["turbopack:///[project]/node_modules/papaparse/papaparse.js","turbopack:///[project]/node_modules/dayjs/dayjs.min.js","turbopack:///[project]/app/lib/csv-parser.ts","turbopack:///[project]/app/types/carriers.ts","turbopack:///[project]/app/lib/format-detector.ts","turbopack:///[project]/app/lib/data-validator.ts","turbopack:///[project]/app/types/claims.ts"],"sourcesContent":["/* @license\nPapa Parse\nv5.5.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n\t// stringify the factory method for the blob worker\n\t// eslint-disable-next-line func-name\n}(this, function moduleFactory()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tfunction getWorkerBlob() {\n\t\tvar URL = global.URL || global.webkitURL || null;\n\t\tvar code = moduleFactory.toString();\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \", '(', code, ')();'], {type: 'text/javascript'})));\n\t}\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = global.IS_PAPA_WORKER || false;\n\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t}\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\t_input = stripBom(_input);\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\n\t\t// Strip character from UTF-8 BOM encoded files that cause issue parsing the file\n\t\tfunction stripBom(string) {\n\t\t\tif (string.charCodeAt(0) === 0xfeff) {\n\t\t\t\treturn string.slice(1);\n\t\t\t}\n\t\t\treturn string;\n\t\t}\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n\n\t\t/** whether to skip empty lines */\n\t\tvar _skipEmptyLines = false;\n\n\t\t/** the columns (keys) we expect when we unparse objects */\n\t\tvar _columns = null;\n\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n\t\tvar _escapeFormulae = false;\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (Array.isArray(_input))\n\t\t{\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(_columns || Object.keys(_input[0]), _input, _skipEmptyLines);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (Array.isArray(_input.data))\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields = _input.meta && _input.meta.fields || _columns;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: typeof _input.data[0] === 'object'\n\t\t\t\t\t\t\t? Object.keys(_input.data[0])\n\t\t\t\t\t\t\t: [];\n\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow new Error('Unable to serialize unrecognized input');\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| typeof _config.quotes === 'function'\n\t\t\t\t|| Array.isArray(_config.quotes))\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\n\t\t\tif (Array.isArray(_config.columns)) {\n\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n\n\t\t\t\t_columns = _config.columns;\n\t\t\t}\n\n\t\t\tif (_config.escapeChar !== undefined) {\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n\t\t\t}\n\n\t\t\tif (_config.escapeFormulae instanceof RegExp) {\n\t\t\t\t_escapeFormulae = _config.escapeFormulae;\n\t\t\t} else if (typeof _config.escapeFormulae === 'boolean' && _config.escapeFormulae) {\n\t\t\t\t_escapeFormulae =  /^[=+\\-@\\t\\r].*$/;\n\t\t\t}\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data, skipEmptyLines)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tvar emptyLine = false;\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n\t\t\t\tif (skipEmptyLines && !hasHeader)\n\t\t\t\t{\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n\t\t\t\t}\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n\t\t\t\t\tvar line = [];\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n\t\t\t\t\t\tline.push(data[row][cx]);\n\t\t\t\t\t}\n\t\t\t\t\temptyLine = line.join('').trim() === '';\n\t\t\t\t}\n\t\t\t\tif (!emptyLine)\n\t\t\t\t{\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0 && !nullLine)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n\t\t\t\t\t{\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tvar needsQuotes = false;\n\n\t\t\tif (_escapeFormulae && typeof str === \"string\" && _escapeFormulae.test(str)) {\n\t\t\t\tstr = \"'\" + str;\n\t\t\t\tneedsQuotes = true;\n\t\t\t}\n\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n\n\t\t\tneedsQuotes = needsQuotes\n\t\t\t\t\t\t\t|| _quotes === true\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._halted = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tconst skipFirstNLines = parseInt(this._config.skipFirstNLines) || 0;\n\t\t\tif (this.isFirstChunk && skipFirstNLines > 0) {\n\t\t\t\tlet _newline = this._config.newline;\n\t\t\t\tif (!_newline) {\n\t\t\t\t\tconst quoteChar = this._config.quoteChar || '\"';\n\t\t\t\t\t_newline = this._handle.guessLineEndings(chunk, quoteChar);\n\t\t\t\t}\n\t\t\t\tconst splitChunk = chunk.split(_newline);\n\t\t\t\tchunk = [...splitChunk.slice(skipFirstNLines)].join(_newline);\n\t\t\t}\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\t\t\tthis._halted = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\tthis._halted = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\t\tthis._halted = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send(this._config.downloadRequestBody);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk;\n\t\t\tif(size) {\n\t\t\t\tchunk = remaining.substring(0, size);\n\t\t\t\tremaining = remaining.substring(size);\n\t\t\t} else {\n\t\t\t\tchunk = remaining;\n\t\t\t\tremaining = '';\n\t\t\t}\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t// so we need to pause until more items\n\t\t\t\t// can be processed\n\t\t\t\tthis._handle.pause();\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t}\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/;\n\t\tvar ISO_DATE = /^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/;\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse {\n\t\t\t\t\t\t_results.data = _results.data[0];\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = this.guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n\t\t\t// otherwise we can get duplicate content within a row\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tif(self.streamer._halted) {\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t} else {\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n\t\t\t\t// wait for it to halt in order to resume\n\t\t\t\tsetTimeout(self.resume, 3);\n\t\t\t}\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tthis.guessLineEndings = function(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction testFloat(s) {\n\t\t\tif (FLOAT.test(s)) {\n\t\t\t\tvar floatValue = parseFloat(s);\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\t_results.data = _results.data.filter(function(d) {\n\t\t\t\t\treturn !testEmptyLine(d);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\n\t\t\tfunction addHeader(header, i)\n\t\t\t{\n\t\t\t\tif (isFunction(_config.transformHeader))\n\t\t\t\t\theader = _config.transformHeader(header, i);\n\n\t\t\t\t_fields.push(header);\n\t\t\t}\n\n\t\t\tif (Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\t_results.data[i].forEach(addHeader);\n\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n\t\t\telse\n\t\t\t\t_results.data.forEach(addHeader);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (testFloat(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfunction processRow(rowSource, i)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = rowSource[j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\n\t\t\tvar incrementBy = 1;\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\t_results.data = _results.data.map(processRow);\n\t\t\t\tincrementBy = _results.data.length;\n\t\t\t}\n\t\t\telse\n\t\t\t\t_results.data = processRow(_results.data, 0);\n\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += incrementBy;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n\t\t\t\tvar delim = delimitersToGuess[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 0) {\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\tvar error = {\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg\n\t\t\t};\n\t\t\tif(row !== undefined) {\n\t\t\t\terror.row = row;\n\t\t\t}\n\t\t\t_results.errors.push(error);\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\tvar renamedHeaders = null;\n\t\tvar headerParsed = false;\n\n\t\tif (config.quoteChar === undefined || config.quoteChar === null) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow new Error('Comment character same as delimiter');\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow new Error('Input must be a string');\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndDelimiter, delimLen) === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t// we look for next delimiter char\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substring(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\tif (config.header && !baseIndex && data.length && !headerParsed)\n\t\t\t\t{\n\t\t\t\t\tconst result = data[0];\n\t\t\t\t\tconst headerCount = Object.create(null); // To track the count of each base header\n\t\t\t\t\tconst usedHeaders = new Set(result); // To track used headers and avoid duplicates\n\t\t\t\t\tlet duplicateHeaders = false;\n\n\t\t\t\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\t\t\t\tlet header = result[i];\n\t\t\t\t\t\tif (isFunction(config.transformHeader))\n\t\t\t\t\t\t\theader = config.transformHeader(header, i);\n\n\t\t\t\t\t\tif (!headerCount[header]) {\n\t\t\t\t\t\t\theaderCount[header] = 1;\n\t\t\t\t\t\t\tresult[i] = header;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet newHeader;\n\t\t\t\t\t\t\tlet suffixCount = headerCount[header];\n\n\t\t\t\t\t\t\t// Find a unique new header\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tnewHeader = `${header}_${suffixCount}`;\n\t\t\t\t\t\t\t\tsuffixCount++;\n\t\t\t\t\t\t\t} while (usedHeaders.has(newHeader));\n\n\t\t\t\t\t\t\tusedHeaders.add(newHeader); // Mark this new Header as used\n\t\t\t\t\t\t\tresult[i] = newHeader;\n\t\t\t\t\t\t\theaderCount[header]++;\n\t\t\t\t\t\t\tduplicateHeaders = true;\n\t\t\t\t\t\t\tif (renamedHeaders === null) {\n\t\t\t\t\t\t\t\trenamedHeaders = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trenamedHeaders[newHeader] = header;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tusedHeaders.add(header); // Ensure the original header is marked as used\n\t\t\t\t\t}\n\t\t\t\t\tif (duplicateHeaders) {\n\t\t\t\t\t\tconsole.warn('Duplicate headers found and renamed.');\n\t\t\t\t\t}\n\t\t\t\t\theaderParsed = true;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0),\n\t\t\t\t\t\trenamedHeaders: renamedHeaders\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\n\t\tvar workerUrl = getWorkerBlob();\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: msg.results.data[i],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow new Error('Not implemented.');\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","import Papa from 'papaparse'\nimport { ParseOptions } from '@/app/types/upload'\n\nexport interface CSVParseResult {\n  data: any[]\n  headers: string[]\n  meta: {\n    delimiter: string\n    linebreak: string\n    aborted: boolean\n    truncated: boolean\n    cursor: number\n  }\n  errors: Array<{\n    type: string\n    code: string\n    message: string\n    row?: number\n  }>\n}\n\nexport interface StreamingParseOptions extends ParseOptions {\n  chunkSize?: number\n  onChunk?: (chunk: any[], info: { processed: number; total: number }) => void\n  onProgress?: (progress: number) => void\n  onError?: (error: any) => void\n}\n\nexport class CSVParser {\n  private static detectDelimiter(sample: string): string {\n    const delimiters = [',', ';', '\\t', '|']\n    const sampleLines = sample.split('\\n').slice(0, 5)\n    \n    let bestDelimiter = ','\n    let maxConsistency = 0\n    \n    for (const delimiter of delimiters) {\n      const counts = sampleLines.map(line => \n        (line.match(new RegExp(delimiter, 'g')) || []).length\n      )\n      \n      if (counts.length === 0) continue\n      \n      const average = counts.reduce((a, b) => a + b, 0) / counts.length\n      const variance = counts.reduce((sum, count) => sum + Math.pow(count - average, 2), 0) / counts.length\n      const consistency = average > 0 ? average / (1 + variance) : 0\n      \n      if (consistency > maxConsistency) {\n        maxConsistency = consistency\n        bestDelimiter = delimiter\n      }\n    }\n    \n    return bestDelimiter\n  }\n\n  private static detectEncoding(buffer: ArrayBuffer): string {\n    const bytes = new Uint8Array(buffer.slice(0, 1024))\n    \n    // Check for BOM\n    if (bytes.length >= 3 && bytes[0] === 0xEF && bytes[1] === 0xBB && bytes[2] === 0xBF) {\n      return 'utf-8'\n    }\n    if (bytes.length >= 2 && bytes[0] === 0xFF && bytes[1] === 0xFE) {\n      return 'utf-16le'\n    }\n    if (bytes.length >= 2 && bytes[0] === 0xFE && bytes[1] === 0xFF) {\n      return 'utf-16be'\n    }\n    \n    // Simple heuristic for encoding detection\n    let hasHighBytes = false\n    for (let i = 0; i < bytes.length; i++) {\n      if (bytes[i] > 127) {\n        hasHighBytes = true\n        break\n      }\n    }\n    \n    return hasHighBytes ? 'windows-1252' : 'utf-8'\n  }\n\n  private static async readFileAsText(file: File, encoding: string = 'utf-8'): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      \n      reader.onload = () => {\n        resolve(reader.result as string)\n      }\n      \n      reader.onerror = () => {\n        reject(new Error('Failed to read file'))\n      }\n      \n      reader.readAsText(file, encoding)\n    })\n  }\n\n  static async parseFile(file: File, options: ParseOptions = {}): Promise<CSVParseResult> {\n    try {\n      // Detect encoding\n      const encoding = options.encoding || this.detectEncoding(await file.arrayBuffer())\n      \n      // Read file as text\n      const content = await this.readFileAsText(file, encoding)\n      \n      // Detect delimiter if not provided\n      const delimiter = options.delimiter || this.detectDelimiter(content.substring(0, 2048))\n      \n      // Parse with Papa Parse\n      const result = Papa.parse(content, {\n        delimiter,\n        header: options.hasHeader !== false,\n        skipEmptyLines: options.skipEmptyLines !== false,\n        transformHeader: (header: string) => header.trim(),\n        transform: (value: string) => value.trim(),\n        dynamicTyping: false, // Keep as strings for validation\n        complete: () => {},\n        error: () => {}\n      })\n\n      return {\n        data: result.data,\n        headers: result.meta.fields || [],\n        meta: {\n          delimiter: result.meta.delimiter,\n          linebreak: result.meta.linebreak,\n          aborted: result.meta.aborted,\n          truncated: result.meta.truncated,\n          cursor: result.meta.cursor\n        },\n        errors: result.errors\n      }\n    } catch (error) {\n      throw new Error(`CSV parsing failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  static async parseFileStreaming(\n    file: File, \n    options: StreamingParseOptions = {}\n  ): Promise<CSVParseResult> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const encoding = options.encoding || this.detectEncoding(await file.arrayBuffer())\n        const chunkSize = options.chunkSize || 1024 * 1024 // 1MB chunks\n        \n        let processedData: any[] = []\n        let headers: string[] = []\n        let allErrors: any[] = []\n        let totalSize = file.size\n        let processedSize = 0\n        \n        const reader = new FileReader()\n        let offset = 0\n        let remainder = ''\n        let headersParsed = false\n        let delimiter = options.delimiter\n        \n        const processChunk = (chunk: string, isLast: boolean = false) => {\n          // Detect delimiter from first chunk if not provided\n          if (!delimiter && !headersParsed) {\n            delimiter = this.detectDelimiter(chunk)\n          }\n          \n          const lines = (remainder + chunk).split('\\n')\n          remainder = isLast ? '' : lines.pop() || ''\n          \n          if (lines.length === 0) return\n          \n          // Parse headers from first chunk\n          if (!headersParsed) {\n            const headerResult = Papa.parse(lines[0], {\n              delimiter,\n              header: false\n            })\n            \n            if (headerResult.data && headerResult.data.length > 0) {\n              headers = (headerResult.data[0] as string[]).map(h => h.trim())\n              headersParsed = true\n              lines.shift() // Remove header line\n            }\n          }\n          \n          // Parse data lines\n          if (lines.length > 0) {\n            const chunkResult = Papa.parse(lines.join('\\n'), {\n              delimiter,\n              header: false,\n              skipEmptyLines: true,\n              transform: (value: string) => value.trim()\n            })\n            \n            if (chunkResult.errors) {\n              allErrors.push(...chunkResult.errors)\n            }\n            \n            if (chunkResult.data) {\n              const mappedData = chunkResult.data.map((row: any[]) => {\n                const obj: any = {}\n                headers.forEach((header, index) => {\n                  obj[header] = row[index] || ''\n                })\n                return obj\n              })\n              \n              processedData.push(...mappedData)\n              \n              if (options.onChunk) {\n                options.onChunk(mappedData, {\n                  processed: processedData.length,\n                  total: Math.floor(totalSize / 100) // Rough estimate\n                })\n              }\n            }\n          }\n        }\n        \n        const readNextChunk = () => {\n          if (offset >= file.size) {\n            // Process any remaining data\n            if (remainder) {\n              processChunk(remainder, true)\n            }\n            \n            // Return final result\n            resolve({\n              data: processedData,\n              headers,\n              meta: {\n                delimiter: delimiter || ',',\n                linebreak: '\\n',\n                aborted: false,\n                truncated: false,\n                cursor: file.size\n              },\n              errors: allErrors\n            })\n            return\n          }\n          \n          const blob = file.slice(offset, offset + chunkSize)\n          reader.readAsText(blob, encoding)\n        }\n        \n        reader.onload = (e) => {\n          const chunk = e.target?.result as string\n          processedSize += chunk.length\n          \n          if (options.onProgress) {\n            options.onProgress(Math.min((processedSize / totalSize) * 100, 100))\n          }\n          \n          processChunk(chunk)\n          offset += chunkSize\n          \n          // Continue reading\n          setTimeout(readNextChunk, 0) // Allow UI to update\n        }\n        \n        reader.onerror = () => {\n          reject(new Error('Failed to read file chunk'))\n        }\n        \n        // Start reading\n        readNextChunk()\n        \n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  static async getPreviewData(file: File, maxRows: number = 10): Promise<{\n    data: any[]\n    headers: string[]\n    delimiter: string\n    totalRows: number\n  }> {\n    try {\n      // Read a sample of the file for preview\n      const sampleSize = Math.min(file.size, 50 * 1024) // 50KB sample\n      const blob = file.slice(0, sampleSize)\n      const sampleText = await this.readFileAsText(new File([blob], file.name))\n      \n      const delimiter = this.detectDelimiter(sampleText)\n      \n      const result = Papa.parse(sampleText, {\n        delimiter,\n        header: true,\n        skipEmptyLines: true,\n        preview: maxRows,\n        transform: (value: string) => value.trim()\n      })\n      \n      // Estimate total rows (rough calculation)\n      const avgRowLength = sampleText.length / (result.data.length || 1)\n      const estimatedTotalRows = Math.floor(file.size / avgRowLength)\n      \n      return {\n        data: result.data,\n        headers: result.meta.fields || [],\n        delimiter,\n        totalRows: estimatedTotalRows\n      }\n    } catch (error) {\n      throw new Error(`Preview generation failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n}","import { FieldMapping } from './claims'\n\nexport interface CarrierPattern {\n  name: string\n  aliases: string[]\n  headerPatterns: string[]\n  fieldPatterns: Record<string, string[]>\n  requiredColumns: string[]\n  dateFormats: string[]\n  amountFormats: string[]\n  defaultMapping: FieldMapping\n}\n\nexport interface CarrierDetectionResult {\n  carrier: string\n  confidence: number\n  indicators: string[]\n  suggestedMapping: FieldMapping\n  dateFormat?: string\n  amountFormat?: string\n}\n\nexport const KNOWN_CARRIERS: CarrierPattern[] = [\n  {\n    name: 'Anthem',\n    aliases: ['anthem', 'wellpoint', 'elevance'],\n    headerPatterns: ['anthem', 'member', 'subscriber'],\n    fieldPatterns: {\n      claimantId: ['member_id', 'subscriber_id', 'member_number'],\n      claimDate: ['service_date', 'date_of_service', 'claim_date'],\n      serviceType: ['service_type', 'claim_type', 'benefit_category'],\n      medicalAmount: ['medical_paid', 'medical_amount', 'paid_amount'],\n      pharmacyAmount: ['rx_paid', 'pharmacy_paid', 'drug_amount']\n    },\n    requiredColumns: ['member_id', 'service_date', 'paid_amount'],\n    dateFormats: ['MM/DD/YYYY', 'YYYY-MM-DD'],\n    amountFormats: ['$0.00', '0.00'],\n    defaultMapping: {\n      claimantId: 'member_id',\n      claimDate: 'service_date',\n      serviceType: 'service_type',\n      medicalAmount: 'medical_paid',\n      pharmacyAmount: 'rx_paid'\n    }\n  },\n  {\n    name: 'ESI',\n    aliases: ['esi', 'express_scripts', 'express scripts'],\n    headerPatterns: ['esi', 'express', 'scripts', 'prescription'],\n    fieldPatterns: {\n      claimantId: ['member_id', 'person_code', 'subscriber_id'],\n      claimDate: ['fill_date', 'service_date', 'date_filled'],\n      serviceType: ['drug_category', 'therapeutic_class'],\n      pharmacyAmount: ['ingredient_cost', 'total_paid', 'plan_paid']\n    },\n    requiredColumns: ['member_id', 'fill_date', 'total_paid'],\n    dateFormats: ['MM/DD/YYYY', 'YYYYMMDD'],\n    amountFormats: ['0.00'],\n    defaultMapping: {\n      claimantId: 'member_id',\n      claimDate: 'fill_date',\n      serviceType: 'drug_category',\n      medicalAmount: 'medical_amount',\n      pharmacyAmount: 'total_paid'\n    }\n  },\n  {\n    name: 'UnitedHealthcare',\n    aliases: ['uhc', 'united', 'unitedhealthcare', 'optum'],\n    headerPatterns: ['united', 'uhc', 'optum', 'subscriber'],\n    fieldPatterns: {\n      claimantId: ['subscriber_id', 'member_id', 'person_id'],\n      claimDate: ['service_date', 'claim_date', 'date_of_service'],\n      serviceType: ['service_category', 'claim_type'],\n      medicalAmount: ['allowed_amount', 'paid_amount', 'benefit_amount'],\n      pharmacyAmount: ['rx_amount', 'drug_cost']\n    },\n    requiredColumns: ['subscriber_id', 'service_date', 'paid_amount'],\n    dateFormats: ['MM/DD/YYYY', 'YYYY-MM-DD'],\n    amountFormats: ['$0.00', '0.00'],\n    defaultMapping: {\n      claimantId: 'subscriber_id',\n      claimDate: 'service_date',\n      serviceType: 'service_category',\n      medicalAmount: 'allowed_amount',\n      pharmacyAmount: 'rx_amount'\n    }\n  },\n  {\n    name: 'Aetna',\n    aliases: ['aetna', 'cvs', 'cvs health'],\n    headerPatterns: ['aetna', 'cvs', 'member'],\n    fieldPatterns: {\n      claimantId: ['member_id', 'subscriber_id', 'patient_id'],\n      claimDate: ['service_date', 'claim_date'],\n      serviceType: ['service_type', 'procedure_category'],\n      medicalAmount: ['paid_amount', 'allowed_amount'],\n      pharmacyAmount: ['pharmacy_paid', 'drug_cost']\n    },\n    requiredColumns: ['member_id', 'service_date', 'paid_amount'],\n    dateFormats: ['MM/DD/YYYY', 'YYYY-MM-DD'],\n    amountFormats: ['$0.00', '0.00'],\n    defaultMapping: {\n      claimantId: 'member_id',\n      claimDate: 'service_date',\n      serviceType: 'service_type',\n      medicalAmount: 'paid_amount',\n      pharmacyAmount: 'pharmacy_paid'\n    }\n  },\n  {\n    name: 'Cigna',\n    aliases: ['cigna', 'evernorth'],\n    headerPatterns: ['cigna', 'evernorth', 'customer'],\n    fieldPatterns: {\n      claimantId: ['customer_id', 'member_id', 'person_id'],\n      claimDate: ['service_date', 'claim_date'],\n      serviceType: ['service_category', 'benefit_type'],\n      medicalAmount: ['benefit_paid', 'allowed_amount'],\n      pharmacyAmount: ['pharmacy_benefit', 'rx_paid']\n    },\n    requiredColumns: ['customer_id', 'service_date', 'benefit_paid'],\n    dateFormats: ['MM/DD/YYYY', 'YYYY-MM-DD'],\n    amountFormats: ['0.00'],\n    defaultMapping: {\n      claimantId: 'customer_id',\n      claimDate: 'service_date',\n      serviceType: 'service_category',\n      medicalAmount: 'benefit_paid',\n      pharmacyAmount: 'pharmacy_benefit'\n    }\n  }\n]","import { KNOWN_CARRIERS, CarrierPattern, CarrierDetectionResult } from '@/app/types/carriers'\nimport { FieldMapping } from '@/app/types/claims'\n\nexport class FormatDetector {\n  private static normalizeString(str: string): string {\n    return str.toLowerCase().replace(/[^a-z0-9]/g, '')\n  }\n\n  private static calculateStringScore(text: string, patterns: string[]): number {\n    const normalized = this.normalizeString(text)\n    let score = 0\n    \n    for (const pattern of patterns) {\n      const normalizedPattern = this.normalizeString(pattern)\n      if (normalized.includes(normalizedPattern)) {\n        score += normalizedPattern.length\n      }\n    }\n    \n    return score\n  }\n\n  private static detectCarrierFromHeaders(headers: string[]): Array<{ carrier: string; score: number; indicators: string[] }> {\n    const results: Array<{ carrier: string; score: number; indicators: string[] }> = []\n    \n    for (const carrier of KNOWN_CARRIERS) {\n      let score = 0\n      const indicators: string[] = []\n      \n      // Check header patterns\n      for (const header of headers) {\n        const headerScore = this.calculateStringScore(header, carrier.headerPatterns)\n        if (headerScore > 0) {\n          score += headerScore * 2 // Weight header matches higher\n          indicators.push(`Header match: ${header}`)\n        }\n        \n        // Check alias patterns\n        const aliasScore = this.calculateStringScore(header, carrier.aliases)\n        if (aliasScore > 0) {\n          score += aliasScore * 3 // Weight alias matches highest\n          indicators.push(`Alias match: ${header}`)\n        }\n      }\n      \n      // Check for field pattern matches\n      Object.entries(carrier.fieldPatterns).forEach(([field, patterns]) => {\n        for (const header of headers) {\n          const fieldScore = this.calculateStringScore(header, patterns)\n          if (fieldScore > 0) {\n            score += fieldScore\n            indicators.push(`Field pattern match: ${header} -> ${field}`)\n          }\n        }\n      })\n      \n      if (score > 0) {\n        results.push({\n          carrier: carrier.name,\n          score,\n          indicators\n        })\n      }\n    }\n    \n    return results.sort((a, b) => b.score - a.score)\n  }\n\n  private static detectCarrierFromData(\n    sampleData: any[], \n    headers: string[]\n  ): Array<{ carrier: string; score: number; indicators: string[] }> {\n    const results: Array<{ carrier: string; score: number; indicators: string[] }> = []\n    \n    if (!sampleData || sampleData.length === 0) {\n      return results\n    }\n    \n    for (const carrier of KNOWN_CARRIERS) {\n      let score = 0\n      const indicators: string[] = []\n      \n      // Check for required columns presence\n      const presentColumns = carrier.requiredColumns.filter(required => \n        headers.some(header => this.normalizeString(header).includes(this.normalizeString(required)))\n      )\n      \n      if (presentColumns.length > 0) {\n        score += presentColumns.length * 10\n        indicators.push(`Required columns present: ${presentColumns.join(', ')}`)\n      }\n      \n      // Check data format patterns\n      const firstRow = sampleData[0]\n      if (firstRow) {\n        // Check date formats\n        for (const header of headers) {\n          const value = firstRow[header]\n          if (value && typeof value === 'string') {\n            for (const dateFormat of carrier.dateFormats) {\n              if (this.matchesDateFormat(value, dateFormat)) {\n                score += 5\n                indicators.push(`Date format match: ${value} matches ${dateFormat}`)\n                break\n              }\n            }\n            \n            // Check amount formats\n            for (const amountFormat of carrier.amountFormats) {\n              if (this.matchesAmountFormat(value, amountFormat)) {\n                score += 3\n                indicators.push(`Amount format match: ${value} matches ${amountFormat}`)\n                break\n              }\n            }\n          }\n        }\n      }\n      \n      if (score > 0) {\n        results.push({\n          carrier: carrier.name,\n          score,\n          indicators\n        })\n      }\n    }\n    \n    return results.sort((a, b) => b.score - a.score)\n  }\n\n  private static matchesDateFormat(value: string, format: string): boolean {\n    // Simple date format matching\n    const patterns: Record<string, RegExp> = {\n      'MM/DD/YYYY': /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/,\n      'YYYY-MM-DD': /^\\d{4}-\\d{1,2}-\\d{1,2}$/,\n      'YYYYMMDD': /^\\d{8}$/,\n      'DD/MM/YYYY': /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/,\n      'MM-DD-YYYY': /^\\d{1,2}-\\d{1,2}-\\d{4}$/\n    }\n    \n    const pattern = patterns[format]\n    return pattern ? pattern.test(value.trim()) : false\n  }\n\n  private static matchesAmountFormat(value: string, format: string): boolean {\n    const trimmed = value.trim()\n    \n    switch (format) {\n      case '$0.00':\n        return /^\\$?\\d+\\.?\\d{0,2}$/.test(trimmed)\n      case '0.00':\n        return /^\\d+\\.?\\d{0,2}$/.test(trimmed)\n      default:\n        return /^\\$?\\d+\\.?\\d{0,2}$/.test(trimmed)\n    }\n  }\n\n  private static generateMapping(carrier: CarrierPattern, headers: string[]): FieldMapping {\n    const mapping: FieldMapping = { ...carrier.defaultMapping }\n    \n    // Try to improve mapping based on header analysis\n    Object.entries(carrier.fieldPatterns).forEach(([field, patterns]) => {\n      for (const header of headers) {\n        const score = this.calculateStringScore(header, patterns)\n        if (score > 0) {\n          // Only override if we don't have a mapping or this is a better match\n          if (!mapping[field as keyof FieldMapping] || \n              score > this.calculateStringScore(mapping[field as keyof FieldMapping] || '', patterns)) {\n            (mapping as any)[field] = header\n          }\n        }\n      }\n    })\n    \n    return mapping\n  }\n\n  static async detectFormat(\n    headers: string[], \n    sampleData: any[] = [],\n    options: {\n      minConfidence?: number\n      maxCandidates?: number\n    } = {}\n  ): Promise<CarrierDetectionResult[]> {\n    const { minConfidence = 10, maxCandidates = 3 } = options\n    \n    // Detect from headers\n    const headerResults = this.detectCarrierFromHeaders(headers)\n    \n    // Detect from data patterns\n    const dataResults = this.detectCarrierFromData(sampleData, headers)\n    \n    // Combine and score results\n    const combinedResults = new Map<string, { score: number; indicators: string[] }>()\n    \n    // Add header scores\n    headerResults.forEach(result => {\n      combinedResults.set(result.carrier, {\n        score: result.score,\n        indicators: result.indicators\n      })\n    })\n    \n    // Add data scores\n    dataResults.forEach(result => {\n      const existing = combinedResults.get(result.carrier)\n      if (existing) {\n        existing.score += result.score\n        existing.indicators.push(...result.indicators)\n      } else {\n        combinedResults.set(result.carrier, {\n          score: result.score,\n          indicators: result.indicators\n        })\n      }\n    })\n    \n    // Convert to final results with confidence calculation\n    const finalResults: CarrierDetectionResult[] = []\n    const maxScore = Math.max(...Array.from(combinedResults.values()).map(r => r.score))\n    \n    for (const [carrierName, result] of combinedResults.entries()) {\n      if (result.score >= minConfidence) {\n        const carrier = KNOWN_CARRIERS.find(c => c.name === carrierName)\n        if (carrier) {\n          const confidence = maxScore > 0 ? (result.score / maxScore) * 100 : 0\n          \n          finalResults.push({\n            carrier: carrierName,\n            confidence: Math.round(confidence),\n            indicators: result.indicators,\n            suggestedMapping: this.generateMapping(carrier, headers),\n            dateFormat: carrier.dateFormats[0],\n            amountFormat: carrier.amountFormats[0]\n          })\n        }\n      }\n    }\n    \n    // Sort by confidence and limit results\n    return finalResults\n      .sort((a, b) => b.confidence - a.confidence)\n      .slice(0, maxCandidates)\n  }\n\n  static async detectFormatFromFile(\n    file: File,\n    previewData: { headers: string[]; data: any[] }\n  ): Promise<CarrierDetectionResult[]> {\n    try {\n      const results = await this.detectFormat(previewData.headers, previewData.data)\n      \n      // Add file-specific indicators\n      const fileName = file.name.toLowerCase()\n      for (const result of results) {\n        const carrier = KNOWN_CARRIERS.find(c => c.name === result.carrier)\n        if (carrier) {\n          // Check if filename contains carrier indicators\n          for (const alias of carrier.aliases) {\n            if (fileName.includes(alias.toLowerCase())) {\n              result.confidence = Math.min(100, result.confidence + 10)\n              result.indicators.push(`Filename contains: ${alias}`)\n            }\n          }\n        }\n      }\n      \n      return results.sort((a, b) => b.confidence - a.confidence)\n    } catch (error) {\n      console.error('Format detection failed:', error)\n      return []\n    }\n  }\n\n  static getCarrierInfo(carrierName: string): CarrierPattern | null {\n    return KNOWN_CARRIERS.find(c => c.name === carrierName) || null\n  }\n\n  static getAllSupportedCarriers(): string[] {\n    return KNOWN_CARRIERS.map(c => c.name)\n  }\n\n  static validateMapping(mapping: FieldMapping, headers: string[]): {\n    isValid: boolean\n    missingFields: string[]\n    invalidFields: string[]\n  } {\n    const missingFields: string[] = []\n    const invalidFields: string[] = []\n    \n    // Check required fields\n    const requiredFields = ['claimantId', 'claimDate', 'serviceType']\n    \n    for (const field of requiredFields) {\n      const mappedColumn = mapping[field as keyof FieldMapping]\n      if (!mappedColumn) {\n        missingFields.push(field)\n      } else if (!headers.includes(mappedColumn)) {\n        invalidFields.push(field)\n      }\n    }\n    \n    return {\n      isValid: missingFields.length === 0 && invalidFields.length === 0,\n      missingFields,\n      invalidFields\n    }\n  }\n}","import dayjs from 'dayjs'\nimport { \n  ClaimRecord, \n  FieldMapping, \n  ValidationError, \n  DataQualityStats, \n  RawClaimData,\n  REQUIRED_FIELDS \n} from '@/app/types/claims'\n\nexport interface ValidationRule {\n  field: string\n  validator: (value: any, row: RawClaimData, index: number) => ValidationError | null\n  required?: boolean\n}\n\nexport interface ValidationOptions {\n  strictMode?: boolean\n  skipInvalidRows?: boolean\n  maxErrors?: number\n  dateFormats?: string[]\n  amountFormats?: string[]\n}\n\nexport class DataValidator {\n  private static defaultDateFormats = [\n    'MM/DD/YYYY',\n    'YYYY-MM-DD',\n    'MM-DD-YYYY',\n    'DD/MM/YYYY',\n    'YYYYMMDD',\n    'MM/DD/YY',\n    'M/D/YYYY',\n    'M/D/YY'\n  ]\n\n  private static parseDate(value: any, formats: string[] = this.defaultDateFormats): dayjs.Dayjs | null {\n    if (!value) return null\n    \n    const stringValue = String(value).trim()\n    if (!stringValue) return null\n    \n    // Try each format\n    for (const format of formats) {\n      const parsed = dayjs(stringValue, format, true)\n      if (parsed.isValid()) {\n        return parsed\n      }\n    }\n    \n    // Try default parsing as fallback\n    const fallback = dayjs(stringValue)\n    return fallback.isValid() ? fallback : null\n  }\n\n  private static parseAmount(value: any): number {\n    if (value === null || value === undefined || value === '') return 0\n    \n    // Convert to string and clean\n    const stringValue = String(value)\n      .trim()\n      .replace(/[$,\\s]/g, '') // Remove dollar signs, commas, spaces\n      .replace(/[()]/g, '') // Remove parentheses\n    \n    if (!stringValue) return 0\n    \n    const parsed = Number(stringValue)\n    return Number.isNaN(parsed) ? 0 : Math.abs(parsed) // Use absolute value\n  }\n\n  private static validateClaimantId(value: any, row: RawClaimData, index: number): ValidationError | null {\n    if (!value || String(value).trim() === '') {\n      return {\n        row: index + 1,\n        field: 'claimantId',\n        value,\n        message: 'Claimant ID is required',\n        severity: 'error'\n      }\n    }\n    \n    const stringValue = String(value).trim()\n    if (stringValue.length > 50) {\n      return {\n        row: index + 1,\n        field: 'claimantId',\n        value,\n        message: 'Claimant ID too long (max 50 characters)',\n        severity: 'warning'\n      }\n    }\n    \n    return null\n  }\n\n  private static validateClaimDate(value: any, row: RawClaimData, index: number, dateFormats?: string[]): ValidationError | null {\n    const parsed = this.parseDate(value, dateFormats)\n    \n    if (!parsed) {\n      return {\n        row: index + 1,\n        field: 'claimDate',\n        value,\n        message: 'Invalid or missing claim date',\n        severity: 'error'\n      }\n    }\n    \n    const now = dayjs()\n    const maxFutureDate = now.add(1, 'year')\n    const minPastDate = now.subtract(10, 'years')\n    \n    if (parsed.isAfter(maxFutureDate)) {\n      return {\n        row: index + 1,\n        field: 'claimDate',\n        value,\n        message: 'Claim date is too far in the future',\n        severity: 'warning'\n      }\n    }\n    \n    if (parsed.isBefore(minPastDate)) {\n      return {\n        row: index + 1,\n        field: 'claimDate',\n        value,\n        message: 'Claim date is very old (more than 10 years)',\n        severity: 'warning'\n      }\n    }\n    \n    return null\n  }\n\n  private static validateServiceType(value: any, row: RawClaimData, index: number): ValidationError | null {\n    if (!value || String(value).trim() === '') {\n      return {\n        row: index + 1,\n        field: 'serviceType',\n        value,\n        message: 'Service type is required',\n        severity: 'error'\n      }\n    }\n    \n    return null\n  }\n\n  private static validateAmount(\n    value: any, \n    row: RawClaimData, \n    index: number, \n    fieldName: string\n  ): ValidationError | null {\n    const amount = this.parseAmount(value)\n    \n    if (amount < 0) {\n      return {\n        row: index + 1,\n        field: fieldName,\n        value,\n        message: `Negative ${fieldName} amount`,\n        severity: 'warning'\n      }\n    }\n    \n    if (amount > 1000000) { // $1M threshold\n      return {\n        row: index + 1,\n        field: fieldName,\n        value,\n        message: `Unusually high ${fieldName} amount: $${amount.toLocaleString()}`,\n        severity: 'warning'\n      }\n    }\n    \n    return null\n  }\n\n  private static validateIcdCode(value: any, row: RawClaimData, index: number): ValidationError | null {\n    if (!value) return null // Optional field\n    \n    const stringValue = String(value).trim()\n    \n    // Basic ICD-10 format validation (simplified)\n    const icd10Pattern = /^[A-Z]\\d{2}(\\.\\d{1,4})?$/\n    const icd9Pattern = /^\\d{3}(\\.\\d{1,2})?$/\n    \n    if (!icd10Pattern.test(stringValue) && !icd9Pattern.test(stringValue)) {\n      return {\n        row: index + 1,\n        field: 'icdCode',\n        value,\n        message: 'Invalid ICD code format',\n        severity: 'warning'\n      }\n    }\n    \n    return null\n  }\n\n  static createValidationRules(options: ValidationOptions = {}): ValidationRule[] {\n    const { dateFormats } = options\n    \n    return [\n      {\n        field: 'claimantId',\n        validator: this.validateClaimantId,\n        required: true\n      },\n      {\n        field: 'claimDate',\n        validator: (value, row, index) => this.validateClaimDate(value, row, index, dateFormats),\n        required: true\n      },\n      {\n        field: 'serviceType',\n        validator: this.validateServiceType,\n        required: true\n      },\n      {\n        field: 'medicalAmount',\n        validator: (value, row, index) => this.validateAmount(value, row, index, 'medical'),\n        required: false\n      },\n      {\n        field: 'pharmacyAmount',\n        validator: (value, row, index) => this.validateAmount(value, row, index, 'pharmacy'),\n        required: false\n      },\n      {\n        field: 'totalAmount',\n        validator: (value, row, index) => this.validateAmount(value, row, index, 'total'),\n        required: false\n      },\n      {\n        field: 'icdCode',\n        validator: this.validateIcdCode,\n        required: false\n      }\n    ]\n  }\n\n  static validateRow(\n    row: RawClaimData, \n    index: number, \n    mapping: FieldMapping, \n    rules: ValidationRule[]\n  ): ValidationError[] {\n    const errors: ValidationError[] = []\n    \n    for (const rule of rules) {\n      const mappedField = mapping[rule.field as keyof FieldMapping]\n      if (!mappedField) {\n        if (rule.required) {\n          errors.push({\n            row: index + 1,\n            field: rule.field,\n            value: null,\n            message: `Required field '${rule.field}' not mapped`,\n            severity: 'error'\n          })\n        }\n        continue\n      }\n      \n      const value = row[mappedField]\n      const error = rule.validator(value, row, index)\n      if (error) {\n        errors.push(error)\n      }\n    }\n    \n    return errors\n  }\n\n  static validateData(\n    data: RawClaimData[], \n    mapping: FieldMapping, \n    options: ValidationOptions = {}\n  ): { errors: ValidationError[]; stats: DataQualityStats } {\n    const {\n      strictMode = false,\n      maxErrors = 1000,\n      dateFormats,\n      amountFormats\n    } = options\n    \n    const errors: ValidationError[] = []\n    const rules = this.createValidationRules({ dateFormats, amountFormats })\n    \n    let validRows = 0\n    let invalidRows = 0\n    let duplicateIds = 0\n    const seenIds = new Set<string>()\n    const missingRequired: Record<string, number> = {}\n    let invalidDates = 0\n    \n    // Initialize missing required counts\n    REQUIRED_FIELDS.forEach(field => {\n      missingRequired[field] = 0\n    })\n    \n    for (let i = 0; i < data.length; i++) {\n      if (errors.length >= maxErrors) {\n        break\n      }\n      \n      const row = data[i]\n      const rowErrors = this.validateRow(row, i, mapping, rules)\n      \n      // Check for duplicate IDs\n      const claimantIdField = mapping.claimantId\n      if (claimantIdField) {\n        const claimantId = String(row[claimantIdField] || '').trim()\n        if (claimantId) {\n          if (seenIds.has(claimantId)) {\n            duplicateIds++\n            rowErrors.push({\n              row: i + 1,\n              field: 'claimantId',\n              value: claimantId,\n              message: 'Duplicate claimant ID',\n              severity: 'warning'\n            })\n          } else {\n            seenIds.add(claimantId)\n          }\n        }\n      }\n      \n      // Count missing required fields\n      REQUIRED_FIELDS.forEach(field => {\n        const mappedField = mapping[field]\n        if (!mappedField || !row[mappedField] || String(row[mappedField]).trim() === '') {\n          missingRequired[field]++\n        }\n      })\n      \n      // Count invalid dates\n      const claimDateField = mapping.claimDate\n      if (claimDateField) {\n        const parsed = this.parseDate(row[claimDateField])\n        if (!parsed) {\n          invalidDates++\n        }\n      }\n      \n      if (rowErrors.length > 0) {\n        errors.push(...rowErrors)\n        if (rowErrors.some(e => e.severity === 'error')) {\n          invalidRows++\n        } else {\n          validRows++\n        }\n      } else {\n        validRows++\n      }\n    }\n    \n    const dataCompleteness = data.length > 0 ? (validRows / data.length) * 100 : 0\n    \n    const stats: DataQualityStats = {\n      rowCount: data.length,\n      validRows,\n      invalidRows,\n      missingRequired,\n      invalidDates,\n      duplicateIds,\n      dataCompleteness: Math.round(dataCompleteness * 100) / 100\n    }\n    \n    return { errors, stats }\n  }\n\n  static normalizeRow(row: RawClaimData, mapping: FieldMapping, index: number): ClaimRecord | null {\n    try {\n      const claimantIdField = mapping.claimantId\n      const claimDateField = mapping.claimDate\n      \n      if (!claimantIdField || !claimDateField) {\n        return null\n      }\n      \n      const claimantId = String(row[claimantIdField] || '').trim()\n      const claimDate = this.parseDate(row[claimDateField])\n      \n      if (!claimantId || !claimDate) {\n        return null\n      }\n      \n      const serviceType = String(row[mapping.serviceType || ''] || 'Unknown').trim()\n      const medicalAmount = this.parseAmount(row[mapping.medicalAmount || ''])\n      const pharmacyAmount = this.parseAmount(row[mapping.pharmacyAmount || ''])\n      \n      let totalAmount = medicalAmount + pharmacyAmount\n      if (mapping.totalAmount && row[mapping.totalAmount]) {\n        const explicitTotal = this.parseAmount(row[mapping.totalAmount])\n        if (explicitTotal > 0) {\n          totalAmount = explicitTotal\n        }\n      }\n      \n      return {\n        id: `${claimantId}-${index}`,\n        claimantId,\n        claimDate: claimDate.toISOString(),\n        monthKey: claimDate.format('YYYY-MM'),\n        serviceType,\n        medicalAmount,\n        pharmacyAmount,\n        totalAmount,\n        icdCode: mapping.icdCode ? String(row[mapping.icdCode] || '').trim() || undefined : undefined,\n        medicalDesc: mapping.medicalDesc ? String(row[mapping.medicalDesc] || '').trim() || undefined : undefined,\n        laymanTerm: mapping.laymanTerm ? String(row[mapping.laymanTerm] || '').trim() || undefined : undefined,\n        provider: mapping.provider ? String(row[mapping.provider] || '').trim() || undefined : undefined,\n        location: mapping.location ? String(row[mapping.location] || '').trim() || undefined : undefined,\n        originalRow: row\n      }\n    } catch (error) {\n      return null\n    }\n  }\n\n  static normalizeData(\n    data: RawClaimData[], \n    mapping: FieldMapping, \n    options: ValidationOptions = {}\n  ): ClaimRecord[] {\n    const { skipInvalidRows = true } = options\n    const normalized: ClaimRecord[] = []\n    \n    for (let i = 0; i < data.length; i++) {\n      const row = data[i]\n      const normalizedRow = this.normalizeRow(row, mapping, i)\n      \n      if (normalizedRow) {\n        normalized.push(normalizedRow)\n      } else if (!skipInvalidRows) {\n        // Could add a placeholder record or throw error\n        console.warn(`Failed to normalize row ${i + 1}`)\n      }\n    }\n    \n    return normalized\n  }\n\n  static generateDataQualityReport(stats: DataQualityStats): string {\n    const lines: string[] = []\n    \n    lines.push(`Data Quality Report`)\n    lines.push(`===================`)\n    lines.push(`Total Rows: ${stats.rowCount.toLocaleString()}`)\n    lines.push(`Valid Rows: ${stats.validRows.toLocaleString()} (${((stats.validRows / stats.rowCount) * 100).toFixed(1)}%)`)\n    lines.push(`Invalid Rows: ${stats.invalidRows.toLocaleString()}`)\n    lines.push(`Data Completeness: ${stats.dataCompleteness}%`)\n    lines.push(``)\n    \n    if (Object.keys(stats.missingRequired).length > 0) {\n      lines.push(`Missing Required Fields:`)\n      Object.entries(stats.missingRequired).forEach(([field, count]) => {\n        if (count > 0) {\n          lines.push(`  ${field}: ${count.toLocaleString()} rows`)\n        }\n      })\n      lines.push(``)\n    }\n    \n    if (stats.invalidDates > 0) {\n      lines.push(`Invalid Dates: ${stats.invalidDates.toLocaleString()} rows`)\n    }\n    \n    if (stats.duplicateIds > 0) {\n      lines.push(`Duplicate IDs: ${stats.duplicateIds.toLocaleString()} occurrences`)\n    }\n    \n    return lines.join('\\n')\n  }\n}","export interface ClaimRecord {\n  id: string\n  claimantId: string\n  claimDate: string // ISO string\n  monthKey: string // YYYY-MM format\n  serviceType: string\n  medicalAmount: number\n  pharmacyAmount: number\n  totalAmount: number\n  icdCode?: string\n  medicalDesc?: string\n  laymanTerm?: string\n  provider?: string\n  location?: string\n  originalRow: Record<string, any>\n}\n\nexport interface RawClaimData {\n  [key: string]: string | number | null | undefined\n}\n\nexport interface FieldMapping {\n  claimantId?: string\n  claimDate?: string\n  serviceType?: string\n  medicalAmount?: string\n  pharmacyAmount?: string\n  totalAmount?: string\n  icdCode?: string\n  medicalDesc?: string\n  laymanTerm?: string\n  provider?: string\n  location?: string\n}\n\nexport interface ValidationError {\n  row: number\n  field: string\n  value: any\n  message: string\n  severity: 'error' | 'warning'\n}\n\nexport interface DataQualityStats {\n  rowCount: number\n  validRows: number\n  invalidRows: number\n  missingRequired: Record<string, number>\n  invalidDates: number\n  duplicateIds: number\n  dataCompleteness: number // percentage\n}\n\nexport interface ProcessingResult {\n  claims: ClaimRecord[]\n  errors: ValidationError[]\n  stats: DataQualityStats\n  mapping: FieldMapping\n  carrier?: string\n  confidence?: number\n}\n\nexport interface CarrierFormat {\n  name: string\n  confidence: number\n  indicators: string[]\n  defaultMapping: FieldMapping\n}\n\nexport const REQUIRED_FIELDS = ['claimantId', 'claimDate', 'serviceType', 'medicalAmount', 'pharmacyAmount'] as const\nexport const OPTIONAL_FIELDS = ['totalAmount', 'icdCode', 'medicalDesc', 'laymanTerm', 'provider', 'location'] as const\nexport const ALL_FIELDS = [...REQUIRED_FIELDS, ...OPTIONAL_FIELDS] as const\n\nexport type RequiredField = typeof REQUIRED_FIELDS[number]\nexport type OptionalField = typeof OPTIONAL_FIELDS[number]\nexport type ClaimField = typeof ALL_FIELDS[number]"],"names":[],"mappings":"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","ignoreList":[0,1]}