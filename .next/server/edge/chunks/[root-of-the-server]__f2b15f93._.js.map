{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { NextResponse, type NextRequest } from 'next/server'\n\nexport async function middleware(request: NextRequest) {\n  let response = NextResponse.next({\n    request: {\n      headers: request.headers,\n    },\n  })\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return request.cookies.get(name)?.value\n        },\n        set(name: string, value: string, options: any) {\n          request.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: request.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n        },\n        remove(name: string, options: any) {\n          request.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: request.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n        },\n      },\n    }\n  )\n\n  const {\n    data: { user },\n  } = await supabase.auth.getUser()\n\n  // Protect dashboard routes\n  if (request.nextUrl.pathname.startsWith('/dashboard') && !user) {\n    return NextResponse.redirect(new URL('/auth/login', request.url))\n  }\n\n  // Redirect authenticated users from auth pages\n  if (request.nextUrl.pathname.startsWith('/auth') && user) {\n    return NextResponse.redirect(new URL('/dashboard', request.url))\n  }\n\n  return response\n}\n\nexport const config = {\n  matcher: ['/dashboard/:path*', '/auth/:path*']\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;AAEO,eAAe,WAAW,OAAoB;IACnD,IAAI,WAAW,gMAAY,CAAC,IAAI,CAAC;QAC/B,SAAS;YACP,SAAS,QAAQ,OAAO;QAC1B;IACF;IAEA,MAAM,WAAW,IAAA,iMAAkB,wIAGjC;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,QAAQ,OAAO,CAAC,GAAG,CAAC,OAAO;YACpC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,QAAQ,OAAO,CAAC,GAAG,CAAC;oBAClB;oBACA;oBACA,GAAG,OAAO;gBACZ;gBACA,WAAW,gMAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA;oBACA,GAAG,OAAO;gBACZ;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,QAAQ,OAAO,CAAC,GAAG,CAAC;oBAClB;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;gBACA,WAAW,gMAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;YACF;QACF;IACF;IAGF,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACf,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAE/B,2BAA2B;IAC3B,IAAI,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,iBAAiB,CAAC,MAAM;QAC9D,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;IACjE;IAEA,+CAA+C;IAC/C,IAAI,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,MAAM;QACxD,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;KAAe;AAChD"}}]
}